{
	"info": {
		"_postman_id": "192b7fe5-2a29-4b0e-baff-dfdea3c6e02b",
		"name": "Home_work_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/login?login=ginger&password=1234",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "ginger"
						},
						{
							"key": "password",
							"value": "1234"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"console.log(response);",
							"let salary = response.person.u_name[1];",
							"console.log(\"salary=\", salary);",
							"let u_salary_1_5_year = response.person.u_salary_1_5_year;",
							"console.log(\"u_salary_1_5_year=\", u_salary_1_5_year);",
							"",
							"pm.test(\"qa_salary_after_12_months\", function () {",
							"    pm.expect(response.qa_salary_after_12_months).to.eql(salary*2.9);",
							"});",
							"pm.test(\"qa_salary_after_6_months\", function () {",
							"    pm.expect(response.qa_salary_after_6_months).to.eql(salary*2);",
							"});",
							"",
							"pm.test(\"u_salary_1_5_year\", function () {",
							"    pm.expect(u_salary_1_5_year).to.eql(salary*4);",
							"});",
							"",
							"pm.environment.set(\"u_salary_1_5_year\", u_salary_1_5_year);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"u_name\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": [",
							"                        {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    ]",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"u_age\",",
							"                \"u_name\",",
							"                \"u_salary_1_5_year\"",
							"            ]",
							"        },",
							"        \"qa_salary_after_12_months\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"qa_salary_after_6_months\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"start_qa_salary\": {",
							"            \"type\": \"integer\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"person\",",
							"        \"qa_salary_after_12_months\",",
							"        \"qa_salary_after_6_months\",",
							"        \"start_qa_salary\"",
							"    ]",
							"}",
							"",
							"pm.test(\"validate_schema\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": 28,\n    \"salary\": 1000,\n    \"name\": \"Vika\",\n    \"auth_token\": {{token}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"let salary = response.salary[0];",
							"console.log(\"salary\", salary);",
							"let salaryX2 = +response.salary[1];",
							"console.log(\"salaryX2\", salaryX2);",
							"let salaryX3 = +response.salary[2];",
							"console.log(\"salaryX3\", salaryX3);",
							"",
							"pm.test(\"salary_1\", function () {",
							"    pm.expect(salary).to.eql(response.salary[0]);",
							"});",
							"",
							"pm.test(\"salary_2\", function () {",
							"    pm.expect(salaryX2).to.eql(salary*2);",
							"});",
							"",
							"pm.test(\"salary_3\", function () {",
							"    pm.expect(salaryX3).to.eql(salary*3);",
							"});",
							"",
							"",
							"pm.test('comparison_salaryX2', function () {",
							"    pm.expect(salaryX3>salaryX2).to.be.true;",
							"});",
							"",
							"",
							"pm.test('comparison_salary', function () {",
							"    pm.expect(salaryX3>salary).to.be.true;",
							"});",
							"",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"salary\": {",
							"            \"type\": \"array\",",
							"            \"items\": [",
							"                {",
							"                    \"type\": \"integer\"",
							"                },",
							"                {",
							"                    \"type\": \"string\"",
							"                },",
							"                {",
							"                    \"type\": \"string\"",
							"                }",
							"            ]",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"age\",",
							"        \"name\",",
							"        \"salary\"",
							"    ]",
							"};",
							"",
							"pm.test(\"validate_schema\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Vika",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"let weight = 10;",
							"",
							"",
							"pm.test(\"daily_food\", function () {",
							"    pm.expect(response.daily_food).to.eql(weight*0.012);",
							"});",
							"",
							"pm.test(\"daily_sleep\", function () {",
							"    pm.expect(response.daily_sleep).to.eql(weight*2.5);",
							"});",
							"",
							"",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"daily_food\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"daily_sleep\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        }",
							"",
							"    },",
							"    \"required\": [",
							"        \"age\",",
							"        \"daily_food\",",
							"        \"daily_sleep\",",
							"        \"name\"",
							"    ]",
							"};",
							"",
							"pm.test(\"validate_schema\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "3",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "10",
							"type": "text"
						},
						{
							"key": "name",
							"value": "El nino",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"family\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"children\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            },",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"children\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"family\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"",
							"pm.test(\"validate_schema\", function() {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"",
							"const response = pm.response.json();",
							"",
							"",
							"",
							"pm.test(\"age_equality_test\", function () {",
							"    pm.expect(response.age).to.eql+(request.age);",
							"});",
							"",
							"console.log(response);",
							"",
							"let jsonData = pm.response.json()",
							"pm.environment.set(\"name\", jsonData.name);",
							"",
							"pm.test(\"value_to_variable\", function () {",
							"    pm.expect(response.name).to.eql(pm.environment.get(\"name\"));",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1_5_year}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Vika",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"console.log(response);",
							"",
							"const i = Math.trunc(Math.random() * response.length);",
							" const random_obj = response[i];",
							"",
							"console.log(\"random_obj\" ,random_obj);",
							"",
							"",
							"let Cur_ID = random_obj.Cur_ID;",
							"console.log(\"Cur_ID=\", Cur_ID);",
							"",
							"",
							"if (Cur_ID > 440) {",
							"    pm.environment.set(\"Cur_ID\", Cur_ID)",
							"} else {};",
							"",
							"console.log(Cur_ID);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"  \"properties\": {",
							"    \"Cur_Abbreviation\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"Cur_ID\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"Cur_Name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"Cur_OfficialRate\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"Cur_Scale\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"Date\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"Cur_Abbreviation\",",
							"    \"Cur_ID\",",
							"    \"Cur_Name\",",
							"    \"Cur_OfficialRate\",",
							"    \"Cur_Scale\",",
							"    \"Date\"",
							"  ]",
							"};",
							"",
							"",
							"pm.test(\"validate_schema\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}